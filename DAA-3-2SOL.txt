#include <stdio.h>
#include <limits.h>

// Structure to hold the max and min values
typedef struct {
    int max;
    int min;
} Pair;

// Function to find the maximum and minimum in an array
Pair find_max_min(int arr[], int left, int right) {
    Pair result;

    // If there is only one element
    if (left == right) {
        result.max = arr[left];
        result.min = arr[left];
        return result;
    }

    // If there are two elements
    if (right == left + 1) {
        if (arr[left] > arr[right]) {
            result.max = arr[left];
            result.min = arr[right];
        } else {
            result.max = arr[right];
            result.min = arr[left];
        }
        return result;
    }

    // Find mid point
    int mid = (left + right) / 2;

    // Recursive calls to find max and min in the two halves
    Pair leftPair = find_max_min(arr, left, mid);
    Pair rightPair = find_max_min(arr, mid + 1, right);

    // Combine results
    result.max = (leftPair.max > rightPair.max) ? leftPair.max : rightPair.max;
    result.min = (leftPair.min < rightPair.min) ? leftPair.min : rightPair.min;

    return result;
}

// Function to test the implementation
int main() {
    int arr[] = {12, 3, 5, 7, 19, -2, 0, 99, -15};
    int size = sizeof(arr) / sizeof(arr[0]);

    Pair result = find_max_min(arr, 0, size - 1);

    printf("Maximum: %d\n", result.max);
    printf("Minimum: %d\n", result.min);

    return 0;
}
